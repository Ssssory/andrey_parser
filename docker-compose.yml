version: '3'
services:
  
  app:
    build:
      context: ./docker/
      dockerfile: Dockerfile
    image: parsing/php
    container_name: ${PROJECT_NAME}_app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    user: '1000:1000'
    volumes:
      - ./src/:/var/www
      - ./docker/supervisor/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf:ro
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: ${PROJECT_NAME}_nginx
    restart: unless-stopped
    tty: true
    volumes:
      - ./src/:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    ports:
      - "${PORT-80}:80"
      - "443:443"
    networks:
      - app-network
      - mq_rabbit

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  db:
    image: mysql:5.7.22
    container_name: ${PROJECT_NAME}_db
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: laravel
      MYSQL_PASSWORD: 123456
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./db:/var/lib/mysql
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: ${PROJECT_NAME}_rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "pass"
    volumes:
        - ./rabbitmq/data/:/var/lib/rabbitmq/
        - ./rabbitmq/log/:/var/log/rabbitmq
    networks:
        - mq_rabbit

  parser:
    build:
      context: ./docker/
      dockerfile: Dockerfile_python
    container_name: ${PROJECT_NAME}_parser
    restart: unless-stopped
    volumes:
      - ./parser:/srv/parser
    depends_on:
      - "rabbitmq"
    networks:
      - mq_rabbit
      - app-network

networks:
  app-network:
    driver: bridge
  mq_rabbit:
    driver: bridge