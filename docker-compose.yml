version: '3'
services:
  
  app:
    build:
      context: ./docker/
      dockerfile: Dockerfile
    image: parsing/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./src/:/var/www
    networks:
      - app-network

  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    volumes:
     - ./src/:/var/www
     - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
      - mq_rabbit

  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: laravel
      MYSQL_PASSWORD: 123456
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./db:/var/lib/mysql
    networks:
      - app-network

  # rabbitmq:
  #   image: rabbitmq:3.8-management-alpine
  #   container_name: 'rabbitmq'
  #   ports:
  #       - 5673:5672
  #       - 15673:15672
  #   volumes:
  #       - ./rabbitmq/data/:/var/lib/rabbitmq/
  #       - ./rabbitmq/log/:/var/log/rabbitmq
  #   networks:
  #       - mq_rabbit

  # consumer:
  #   build:
  #     context: ./docker/
  #     dockerfile: Dokerfile_node
  #   volumes:
  #     - ./consumer:/srv/app
  #   security_opt:
  #     - seccomp:unconfined
  #   # depends_on:
  #   #   - "rabbitmq"
  #   # command: sh -c '/bin/wait-for-it.sh rabbitmq:5672 --timeout=30 -- node consumer.js'
  #   environment:
  #     NODE_ENV: production
  #     AMQP_URL: amqp://guest:guest@rabbitmq:5672
  #     DOCKER_BUILDKIT: 1
  #   networks:
  #     - mq_rabbit

networks:
  app-network:
    driver: bridge
  mq_rabbit:
    driver: bridge